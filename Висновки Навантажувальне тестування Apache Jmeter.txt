1. Створи набір з GET, POST, PUT, PATCH, DELETE запитів до JSONPlaceholder, які надсилаються протягом 10 секунд у 3 ітерації.
2. До кожного з запитів застосуй 3 різних assert’и. 
3. Результати виконання тестів мають бути отримані за такими Listener’ами:
View Results in Tree
Summary Report.
4. Опиши висновки щодо результатів тестування (базуючись на репортерах) в окремому файлі.

Відповідь:
Було задіяно 10 користувачів по 3 операції за 10 секунд.

HTTP Request GET:
Duration Assertion: було задано 100 мілісекунд, не всі 10 користувачів спрацювали.
Summary Report: час варіювався між 42 та 186 мілісекунд. Помилок 33,33%.
View Results Tree: відповідь на запит отримано там, де користувачі спрацювали.
Assertion Results: прийшло повідомлення на запити, які не пройшли, із вказанням часу на дану операцію, та заданим часом.

HTTP Request POST:
тест-кейс в статусі Fail.

HTTP Request PUT:
Duration Assertion: було задано 200 мілісекунд, не всі 10 користувачів спрацювали.
Summary Report: час варіювався між 143 та 361 мілісекунд. Помилок 20%.
View Results Tree: відповідь на запит отримано там, де користувачі спрацювали.
Assertion Results: прийшло повідомлення на запити, які не пройшли, із вказанням часу на дану операцію, та заданим часом.

HTTP Request PATCH:
Duration Assertion: було задано 150 мілісекунд, не всі 10 користувачів спрацювали.
Summary Report: час варіювався між 140 та 162 мілісекунд. Помилок 16,67%.
View Results Tree: відповідь на запит отримано там, де користувачі спрацювали.
Assertion Results: прийшло повідомлення на запити, які не пройшли, із вказанням часу на дану операцію, та заданим часом.

HTTP Request DELETE:
Duration Assertion: було задано 700 мілісекунд, не всі 10 користувачів спрацювали.
Summary Report: час варіювався між 139 та 1490 мілісекунд. Помилок: Transaction Controller (100%), TOTAL (50%).
View Results Tree: відповідь на запит отримано там, де користувачі спрацювали.
Assertion Results: прийшло повідомлення на запити, які не пройшли, із вказанням часу на дану операцію, та заданим часом.




2. Створи новий тест-план на основі тест-плану з попереднього рівня. В ньому:
для кожного із запитів зроби стрес-тест використаного API;
потрібно виявити такі мінімальні комбінації параметрів, за яких вебсервіс перестає витримувати навантаження.

Відповідь:
Використала той самий тест-план і виконала стрес-тест для сайту https://jsonplaceholder.typicode.com/. 
Мінімальні комбінації, за яких вебсервіс перестав витримувати навантаження було:
50000 користувачів по 3 операції за 10 секунд.

